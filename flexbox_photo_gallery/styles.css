/*  global * selector. */
*{
  box-sizing: border-box;
  
}

body {
  margin: 0;
  font-family: sans-serif;
  background: #f5f6f7;
}

.header {
  text-align: center;
  text-transform: uppercase;
  padding: 32px;
  background-color: #0a0a23;
  color: #fff;
  border-bottom: 4px solid #fdb347;
}

/*Flexbox is a one-dimensional CSS layout that can control the way items are spaced out and aligned within a container.*/
/*To use it, give an element a display property of flex.*/
/*Any direct children of a flex container are called flex items.*/
/*Flexbox is great for building layouts that need to adapt to different screen sizes, like photo galleries.*/

.gallery {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  /*The align-items property positions the flex content along the cross axis. */
  /*In this case, with your flex-direction set to row, your cross axis would be vertical.*/
  gap: 16px;
  max-width: 1400px;
  margin: 0 auto;
  padding: 20px 10px;
}

.gallery img {
  width: 100%;
  max-width: 350px;
  height: 300px;
  object-fit: cover; /*This will tell the image to fill the img container while maintaining aspect ratio, resulting in cropping to fit.*/
  border-radius: 10px;
}

.gallery::after {
  content: "";
  width: 350px;
}
/* The ::after pseudo-element is used to create a flexible space at the end of the gallery. 
  it affects the position of the last element by adjusting the width
  in this case, the width is as the same as the last img so can push it to the left. */